{"ast":null,"code":"import _regeneratorRuntime from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/src/components/Nav.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport bank from '../bank.png';\n\nvar Navbar = /*#__PURE__*/function (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Navbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.checkWalletIsConnected = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _window, ethereum, accounts, account;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _window = window, ethereum = _window.ethereum;\n\n              if (ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              console.log(\"Make sure you have Metamask installed!\");\n              return _context.abrupt(\"return\");\n\n            case 6:\n              window.ethereum.on('accountsChanged', function (accounts) {\n                var selectedAccount = accounts[0];\n                console.log(\"Selected account changed to \".concat(selectedAccount));\n                setText('Connected: ' + selectedAccount.substr(0, 8) + '..');\n                setCurrentAccount(selectedAccount);\n              });\n              console.log(\"Wallet exists! We're ready to go!\");\n\n            case 8:\n              _context.next = 10;\n              return ethereum.request({\n                method: 'eth_accounts'\n              });\n\n            case 10:\n              accounts = _context.sent;\n\n              if (accounts.length !== 0) {\n                account = accounts[0];\n                console.log(\"Found an authorized account: \", account);\n                setCurrentAccount(account);\n                setText('Connected: ' + account.substr(0, 8) + '..');\n              } else {\n                console.log(\"No authorized account found\");\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top shadow p-0\",\n        style: {\n          backgroundColor: 'black',\n          height: '50px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: bank,\n        width: \"50\",\n        height: \"30\",\n        className: \"d-inline-block align-top\",\n        alt: \"bank Image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }), \"\\xA0 Dapp Yield staking (decentralized bankinng)\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"text-nowrap d-none nav-item d-sm-nonne d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        a: true,\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, \"Account Number \", this.props.account))));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/src/components/Nav.js"],"names":["React","Component","useState","useEffect","bank","Navbar","checkWalletIsConnected","window","ethereum","console","log","on","accounts","selectedAccount","setText","substr","setCurrentAccount","request","method","length","account","backgroundColor","height","color","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,IAAP,MAAiB,aAAjB;;IAEMC,M;;;;;;;;;;;;;;;UAGEC,sB,yEAAyB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACFC,MADE,EACfC,QADe,WACfA,QADe;;AAAA,kBAElBA,QAFkB;AAAA;AAAA;AAAA;;AAGrBC,cAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AAHqB;;AAAA;AAMrBH,cAAAA,MAAM,CAACC,QAAP,CAAgBG,EAAhB,CAAmB,iBAAnB,EAAsC,UAAUC,QAAV,EAAoB;AACxD,oBAAMC,eAAe,GAAGD,QAAQ,CAAC,CAAD,CAAhC;AACAH,gBAAAA,OAAO,CAACC,GAAR,uCAA2CG,eAA3C;AACAC,gBAAAA,OAAO,CAAC,gBAAgBD,eAAe,CAACE,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B,CAAhB,GAA+C,IAAhD,CAAP;AACAC,gBAAAA,iBAAiB,CAACH,eAAD,CAAjB;AACD,eALD;AAMAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AAZqB;AAAA;AAAA,qBAeAF,QAAQ,CAACS,OAAT,CAAiB;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAjB,CAfA;;AAAA;AAejBN,cAAAA,QAfiB;;AAgBvB,kBAAIA,QAAQ,CAACO,MAAT,KAAoB,CAAxB,EAA2B;AACnBC,gBAAAA,OADmB,GACTR,QAAQ,CAAC,CAAD,CADC;AAEzBH,gBAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CU,OAA7C;AACAJ,gBAAAA,iBAAiB,CAACI,OAAD,CAAjB;AACAN,gBAAAA,OAAO,CAAC,gBAAgBM,OAAO,CAACL,MAAR,CAAe,CAAf,EAAkB,CAAlB,CAAhB,GAAuC,IAAxC,CAAP;AACD,eALD,MAKO;AACLN,gBAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;;AAvBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAyBrB;AACJ,0BACI;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAyD,QAAA,KAAK,EAAE;AAC5DW,UAAAA,eAAe,EAAC,OAD4C;AACpCC,UAAAA,MAAM,EAAC;AAD6B,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAG,QAAA,SAAS,EAAC,qCAAb;AAAmD,QAAA,KAAK,EAAE;AACtDC,UAAAA,KAAK,EAAC;AADgD,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAK,QAAA,GAAG,EAAEnB,IAAV;AAAgB,QAAA,KAAK,EAAC,IAAtB;AAA2B,QAAA,MAAM,EAAC,IAAlC;AAAuC,QAAA,SAAS,EAAC,0BAAjD;AAA4E,QAAA,GAAG,EAAC,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,qDAHJ,eASQ;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,mDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,CAAC,MAAR;AAAS,QAAA,KAAK,EAAE;AACZmB,UAAAA,KAAK,EAAC;AADM,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGoB,KAAKC,KAAL,CAAWJ,OAH/B,CADJ,CADJ,CATR,CADJ;AAuBH;;;;EApDgBnB,S;;AAuDrB,eAAeI,MAAf","sourcesContent":["import React, {Component,useState, useEffect } from 'react'\nimport bank from '../bank.png'\n\nclass Navbar extends Component{\n     \n      \n        checkWalletIsConnected = async () => {\n          const { ethereum } = window;\n          if (!ethereum) {\n            console.log(\"Make sure you have Metamask installed!\");\n            return;\n          } else {\n            window.ethereum.on('accountsChanged', function (accounts) {\n              const selectedAccount = accounts[0];\n              console.log(`Selected account changed to ${selectedAccount}`);\n              setText('Connected: ' + selectedAccount.substr(0, 8) + '..');\n              setCurrentAccount(selectedAccount);\n            });\n            console.log(\"Wallet exists! We're ready to go!\");\n          }\n      \n          const accounts = await ethereum.request({ method: 'eth_accounts' });\n          if (accounts.length !== 0) {\n            const account = accounts[0];\n            console.log(\"Found an authorized account: \", account);\n            setCurrentAccount(account);\n            setText('Connected: ' + account.substr(0, 8) + '..');\n          } else {\n            console.log(\"No authorized account found\");\n          }\n        };\n    render(){\n        return(\n            <nav className='navbar navbar-dark fixed-top shadow p-0' style={{\n                backgroundColor:'black',height:'50px'\n            }}>\n                <a className='navbar-brand col-sm-3 col-md-2 mr-0' style={{\n                    color:'white'\n                }}>\n                    <img src={bank} width='50' height='30' className='d-inline-block align-top' alt='bank Image'/>\n                    &nbsp; Dapp Yield staking (decentralized bankinng) \n                    </a>\n                    <ul className='navbar-nav px-3'>\n                        <li className='text-nowrap d-none nav-item d-sm-nonne d-sm-block'>\n                            <small a style={{\n                                color:'white'\n                            }}>\n                                Account Number {this.props.account}\n                            </small>\n                        </li>\n                    </ul>\n                \n            </nav>\n            \n        )\n    }\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}