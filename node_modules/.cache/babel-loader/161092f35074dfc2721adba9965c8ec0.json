{"ast":null,"code":"import _regeneratorRuntime from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/src/components/Nav.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport bank from '../bank.png';\n\nvar Navbar = /*#__PURE__*/function (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Navbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.connectWalletHandler = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _window, ethereum, accounts;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _window = window, ethereum = _window.ethereum;\n\n              if (ethereum) {\n                _context.next = 4;\n                break;\n              }\n\n              alert(\"Please install MetaMask!\");\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _context.prev = 4;\n              _context.next = 7;\n              return ethereum.request({\n                method: 'eth_requestAccounts'\n              });\n\n            case 7:\n              accounts = _context.sent;\n              console.log(\"Connected\", accounts[0]);\n\n              _this.setState({\n                account: accounts[0]\n              });\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 12]]);\n    }));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"render\",\n    value: function render() {\n      //{<button onClick={this.connectWalletHandler} className=\"btn btn-primary\">Connect Wallet</button>}\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top shadow p-0\",\n        style: {\n          backgroundColor: 'black',\n          height: '50px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: bank,\n        width: \"50\",\n        height: \"30\",\n        className: \"d-inline-block align-top\",\n        alt: \"bank Image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }), \"\\xA0 Dapp Yield staking (decentralized bankinng)\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"text-nowrap d-none nav-item d-sm-nonne d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        a: true,\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, \"Account Number \", this.props.account))));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/favor/Documents/EthPro/Alleth/defi-staking-app-starter/defi-staking-app-starter/src/components/Nav.js"],"names":["React","Component","useState","useEffect","bank","Navbar","connectWalletHandler","window","ethereum","alert","request","method","accounts","console","log","setState","account","backgroundColor","height","color","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,IAAP,MAAiB,aAAjB;;IAEMC,M;;;;;;;;;;;;;;;UACFC,oB,yEAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACEC,MADF,EACXC,QADW,WACXA,QADW;;AAAA,kBAGdA,QAHc;AAAA;AAAA;AAAA;;AAIjBC,cAAAA,KAAK,CAAC,0BAAD,CAAL;AAJiB;;AAAA;AAAA;AAAA;AAAA,qBASMD,QAAQ,CAACE,OAAT,CAAiB;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAjB,CATN;;AAAA;AASXC,cAAAA,QATW;AAUjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAQ,CAAC,CAAD,CAAjC;;AACA,oBAAKG,QAAL,CAAc;AAAEC,gBAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAnB,eAAd;;AAXiB;AAAA;;AAAA;AAAA;AAAA;AAajBC,cAAAA,OAAO,CAACC,GAAR;;AAbiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAiBf;AACJ;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAyD,QAAA,KAAK,EAAE;AAC5DG,UAAAA,eAAe,EAAC,OAD4C;AACpCC,UAAAA,MAAM,EAAC;AAD6B,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAG,QAAA,SAAS,EAAC,qCAAb;AAAmD,QAAA,KAAK,EAAE;AACtDC,UAAAA,KAAK,EAAC;AADgD,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAK,QAAA,GAAG,EAAEf,IAAV;AAAgB,QAAA,KAAK,EAAC,IAAtB;AAA2B,QAAA,MAAM,EAAC,IAAlC;AAAuC,QAAA,SAAS,EAAC,0BAAjD;AAA4E,QAAA,GAAG,EAAC,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,qDAHJ,eASQ;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,mDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,CAAC,MAAR;AAAS,QAAA,KAAK,EAAE;AACZe,UAAAA,KAAK,EAAC;AADM,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAGoB,KAAKC,KAAL,CAAWJ,OAH/B,CADJ,CADJ,CATR,CADJ;AAuBH;;;;EA3CgBf,S;;AA8CrB,eAAeI,MAAf","sourcesContent":["import React, {Component,useState, useEffect } from 'react'\nimport bank from '../bank.png'\n\nclass Navbar extends Component{\n    connectWalletHandler = async () => {\n        const { ethereum } = window;\n    \n        if (!ethereum) {\n          alert(\"Please install MetaMask!\");\n          return;\n        }\n    \n        try {\n          const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n          console.log(\"Connected\", accounts[0]);\n          this.setState({ account: accounts[0] });\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n    render(){\n        //{<button onClick={this.connectWalletHandler} className=\"btn btn-primary\">Connect Wallet</button>}\n        return(\n            <nav className='navbar navbar-dark fixed-top shadow p-0' style={{\n                backgroundColor:'black',height:'50px'\n            }}>\n                <a className='navbar-brand col-sm-3 col-md-2 mr-0' style={{\n                    color:'white'\n                }}>\n                    <img src={bank} width='50' height='30' className='d-inline-block align-top' alt='bank Image'/>\n                    &nbsp; Dapp Yield staking (decentralized bankinng) \n                    </a>\n                    <ul className='navbar-nav px-3'>\n                        <li className='text-nowrap d-none nav-item d-sm-nonne d-sm-block'>\n                            <small a style={{\n                                color:'white'\n                            }}>\n                                Account Number {this.props.account}\n                            </small>\n                        </li>\n                    </ul>\n                \n            </nav>\n            \n        )\n    }\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}